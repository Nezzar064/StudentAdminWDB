//Format: TODO + PRIORITY/NUMBER
API is the nextttttt one
Implement spring?

Username and password integration, look in studentportal if needed. maybe encrypt password with jbCrypt.
Make a greeter message when logging in
Change primary key so its standalone, needs to be a sequence instead of autoincrement, make a seperate ID for students.
Search for students via name, not ID.
Changefunctions -> StudentService (back end)
ListFunctions -> StudentOutput (front end)

TODO: DO THIS FIRST
Fix lists for getting single variables instead of everything in controller (for listfunctions, idchecker)

Unique fix? Hvis to hedder det samme etc.


//After this, the program is basically done.

https://www.tutorialspoint.com/spring/index.htm
https://www.liquidweb.com/kb/what-is-rest-api-an-overview/
https://www.tutorialspoint.com/microservice_architecture/microservice_architecture_introduction.htm
https://www.tutorialspoint.com/hibernate/hibernate_or_mappings.htm
https://www.tutorialspoint.com/hibernate/hibernate_mapping_files.htm

Javascript w. angular for GUI? otherwise start with simple Swing GUI or Spring.

Reasoning for UserInput and CW still static:
The object doesn't require anything, and the methods (mostly) require very little to setup.
They are less objects in a OOP sense, more just utility classes.





